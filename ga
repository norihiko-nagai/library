① 初訪問時に匿名User-IDを発行する
	1.	JavaScriptでUUIDを生成
	2.	CookieやlocalStorageに保存して保持する

<script>
function generateUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    var r = Math.random() * 16 | 0,
        v = c === 'x' ? r : (r & 0x3 | 0x8);
    return v.toString(16);
  });
}

// すでにIDが保存されているか確認
let anonID = localStorage.getItem("anonUserID");
if (!anonID) {
  anonID = generateUUID();
  localStorage.setItem("anonUserID", anonID);
}
</script>

このanonUserIDを「匿名User-ID」としてGA4に送信します。

⸻

② GTMでGA4タグにUser-IDを送信する
	1.	GTMの変数に「カスタムJavaScript変数」を作り、上のanonUserIDを返すコードを入れる

function() {
  return localStorage.getItem("anonUserID");
}

GA4設定タグの「ユーザープロパティ」にuser_idを追加し、この変数を渡す

👉 これで「全訪問者に匿名ID」が付与されます。

⸻

③ フォーム送信時に「実ID」を生成して突合する
	1.	問い合わせフォーム送信時に、入力されたメールアドレスをSHA256でハッシュ化
（セキュリティ上、必ず生データではなくハッシュ化！）

例（JavaScriptでハッシュ化）：
async function hashEmail(email) {
  const msgUint8 = new TextEncoder().encode(email.toLowerCase().trim());
  const hashBuffer = await crypto.subtle.digest("SHA-256", msgUint8);
  const hashArray = Array.from(new Uint8Array(hashBuffer));
  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
}

ハッシュ化した値をuser_idとしてGA4に送信
	•	GTMで「フォーム送信イベント」をトリガー
	•	変数にハッシュ化メールをセット
	•	GA4イベントタグに渡す

👉 こうすると「匿名User-ID」と「実User-ID」がGA4上で同じユーザーに統合されます。

⸻

✅ 実装後の効果
	•	匿名訪問時：UUIDベースで計測（リード化前の行動が見える）
	•	フォーム送信後：ハッシュ化メールで計測（CRMやMAと突合可能）
	•	GA4は同一ユーザーと判定して履歴を統合するため、「初回訪問〜資料DL〜問い合わせ」の全行動がつながる

メールアドレスなどの個人情報は 必ずハッシュ化 して送信（そのまま送るのはNG）
	•	GA4の「User-ID機能」を有効化し、User-IDビュー（探索用）を作成して分析する
	•	CRM（Salesforceなど）やMAと突合すると、広告→Web→商談→受注まで一気にトラッキング可能




次のステップとして 「匿名訪問 → フォーム送信（実ID化） → CV」までを可視化するLooker Studioダッシュボード設計図 をまとめます。

ダッシュボード設計：匿名IDからCVまでの可視化

1. 目的
	•	匿名状態の訪問履歴と
	•	実IDに切り替わった後の行動（CVまで） を一気通貫で分析できるようにする
	•	「初回訪問からCVまでに何回接触したか」「どの経路が多いか」を可視化

⸻

2. データソース
	•	GA4（User-ID有効化済み）
	•	ディメンション：
	•	user_id（匿名ID／実ID）
	•	session_number
	•	first_user_source / medium / campaign（初回流入経路）
	•	event_name（page_view, form_submit, conversion など）
	•	指標：
	•	セッション数
	•	イベント数
	•	コンバージョン数

⸻

3. ダッシュボード構成

🔹 ページ1：ユーザー行動全体像
	•	ユーザー数（匿名／実ID含む）
	•	コンバージョン数
	•	平均セッション数（CVまで）
	•	平均日数（CVまで）

👉 KPIカードでサマリー表示

⸻

🔹 ページ2：ファネル分析
	•	ファネル例：
	1.	匿名訪問開始（User-ID=匿名UUID）
	2.	複数回の訪問・閲覧
	3.	フォーム送信（User-ID=ハッシュ化メールに切り替え）
	4.	CV（問い合わせ完了や資料請求）

👉 ファネルグラフで「匿名→実ID→CV」の到達率を表示

⸻

🔹 ページ3：セッション回数別CV分析
	•	セッション番号 × CV数の棒グラフ
	•	例：
	•	初回訪問CV率：15%
	•	2回目訪問CV率：20%
	•	3回目以降CV率：65%

👉 「BtoBは複数回接触後にCVする」ことが視覚化できる

⸻

🔹 ページ4：経路別CV貢献
	•	ファーストタッチチャネル（匿名訪問開始の流入元）
	•	ラストタッチチャネル（CV前の直前流入元）
	•	クロス集計表で表示

👉 「最初はオーガニック、最後はダイレクトでCV」などが見える

⸻

🔹 ページ5：ユーザー単位の行動ジャーニー
	•	user_idごとの時系列テーブル
	•	訪問日時
	•	セッション番号
	•	閲覧ページ
	•	イベント（フォーム送信／CV など）

👉 営業チームが「このリードはどんな動きをしていたか」を具体的に確認可能

⸻

4. 補足：ダッシュボードの実用化ポイント
	•	匿名IDと実IDの突合をGA4が自動でやるので、Looker Studio側ではそのままuser_idを使えばOK
	•	CVまでの「日数」や「セッション回数」を軸にすることで、営業リードの熟成プロセスが見える
	•	MAツール（HubSpot, Pardot, Marketoなど）と連携すれば、さらに「商談化率」「受注率」まで分析可能

⸻

✅ 結論
	•	匿名訪問からCVまでのプロセスを GA4のUser-ID＋Looker Studio で一気通貫に可視化できる
	•	特に「セッション回数別CV率」と「ファーストタッチ→ラストタッチ分析」は、BtoBマーケティングで必須
	•	この設計を入れれば、「リードは何回接触すればホット化するのか？」を正確に把握できる


Looker Studioで「匿名訪問 → 実ID（フォーム送信）→ CV」までを分析するための 具体的なチャート構成（テンプレート設計書） をまとめます。

⸻

✅ Looker Studio ダッシュボード設計テンプレート

1. サマリー（KPIカード）
	•	ディメンション：なし
	•	指標：
	•	ユーザー数（user_idベース）
	•	新規ユーザー数
	•	コンバージョン数（問い合わせ送信など）
	•	CVR（コンバージョン ÷ ユーザー数）
	•	平均セッション数（CVユーザーのみ）
	•	平均日数（初訪問→CV）

👉 一目で「全体の健康状態」を確認できるページ

⸻

2. ファネル分析（匿名 → 実ID → CV）
	•	グラフ種類：ファネルチャート
	•	ディメンション：イベントステージ
	•	匿名訪問開始（user_id = UUID）
	•	実ID切り替え（フォーム送信／ハッシュ化メール）
	•	コンバージョン完了
	•	指標：ユーザー数

👉 匿名ユーザーがどれくらい実ID化して、そこから何％CVしているかを可視化

⸻

3. セッション回数別CV率
	•	グラフ種類：棒グラフ（縦軸＝CV数、横軸＝セッション番号）
	•	ディメンション：session_number
	•	指標：
	•	CVユーザー数
	•	CV率（CVユーザー ÷ 全ユーザー）

👉 「BtoBでは3回目以降でCVが多い」などの傾向を確認

⸻

4. 経路別CV貢献（ファーストタッチ × ラストタッチ）
	•	グラフ種類：クロス集計表
	•	行ディメンション：first_user_source / medium
	•	列ディメンション：session_source / medium（CVセッション直前）
	•	指標：CV数

👉 「最初はオーガニック → 最後はメールでCV」など、複数チャネルの貢献が可視化

⸻

5. ユーザー単位の行動ジャーニー
	•	グラフ種類：テーブル（時系列）
	•	ディメンション：
	•	user_id
	•	event_date
	•	page_path + query_string
	•	event_name
	•	指標：セッション番号

👉 営業チームが「このリードはどんな経路で育ったか」を1件ずつ追える

⸻

6. CVまでの日数分布
	•	グラフ種類：ヒストグラム
	•	ディメンション：days_to_conversion（GA4探索で計算するか、BigQuery連携で取得）
	•	指標：CVユーザー数

👉 「1日以内CVが30%、7日以内が70%、1ヶ月以上かかるのが20%」などが分かる

⸻

7. ページ別貢献分析
	•	グラフ種類：棒グラフ（横向き）
	•	ディメンション：page_path
	•	指標：
	•	CVアシスト数（CV前に閲覧された回数）
	•	離脱率

👉 「ホワイトペーパーLPはアシスト率高い」「FAQページは離脱率高い」など改善に使える

⸻

✅ 運用ポイント
	•	匿名IDと実IDをUser-IDで統合しておけば、Looker Studio側ではそのままuser_idを使えばOK
	•	フィルタを使って「匿名ユーザーだけ」「実IDユーザーだけ」を切り替えて分析できるようにすると便利
	•	BigQueryにGA4を連携すると、「CVまでの日数」「匿名→実IDの突合率」などさらに高度な分析が可能


